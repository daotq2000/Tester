<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-FUDE26F" ignored="0" name="Test" tests="1" failures="1" timestamp="2020-06-17T18:01:51 ICT" time="0.053" errors="0">
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.004" classname="org.springframework.test.context.testng.AbstractTestNGSpringContextTests">
    <failure type="java.lang.IllegalStateException" message="Failed to load ApplicationContext">
      <![CDATA[java.lang.IllegalStateException: Failed to load ApplicationContext
at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:99)
at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:101)
at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:319)
at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextPrepareTestInstance(AbstractTestNGSpringContextTests.java:146)
at java.util.ArrayList.forEach(Unknown Source)
Caused by: java.lang.IllegalArgumentException: Cannot load an ApplicationContext with a NULL 'contextLoader'. Consider annotating your test class with @ContextConfiguration or @ContextHierarchy.
at org.springframework.util.Assert.notNull(Assert.java:112)
at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:57)
at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:91)
... 31 more
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="addStaff1" time="0.011" classname="Test.DepartDaoTest">
    <failure type="org.testng.internal.reflect.MethodMatcherException" message="
[public void Test.DepartDaoTest.addStaff1(java.lang.String,java.lang.String,boolean) throws bsh.ParseException] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: addStaff1([Parameter{index=0, type=java.lang.String, declaredAnnotations=[@org.testng.annotations.Optional(value=null)]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[@org.testng.annotations.Optional(value=null)]}, Parameter{index=2, type=boolean, declaredAnnotations=[@org.testng.annotations.Optional(value=null)]}])
Arguments: [null,null,null]">
      <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void Test.DepartDaoTest.addStaff1(java.lang.String,java.lang.String,boolean) throws bsh.ParseException] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Arguments: [null,null,null]
at java.util.ArrayList.forEach(Unknown Source)
... Removed 23 stack frames]]>
    </failure>
  </testcase> <!-- addStaff1 -->
</testsuite> <!-- Test -->
